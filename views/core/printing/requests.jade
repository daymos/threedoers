extends ../../layouts/_app


block title
  |  Your Projects

block content
  .page
    .container
      br
      br
      .row
        include ../../includes/banner

    .bg-3doers
      .container
        div(role='tabpanel')
          ul.nav.nav-tabs.nav-justified.nav-tabs-3doers(role='tablist')
            li.active
              a(href='/printing/requests', aria-controls='workplace') #{__('Workplace')}
            li
              a(href='/printing/jobs', aria-controls='printing') #{__('Printing')}
            li
              a(href='/design/projects', aria-controls='designing') #{__('Designing')}
            li
              a(href='/printing/archived', aria-controls='completed') #{__('Completed')}

          .tab-content
            .tab-pane.fade.in.active(id='workplace', role='tabpanel')
            if !toApply
              br
              .alert.alert-warning
                h4 You need to complete at least one previous order before you can accept another one.
            - if (projects.length==0)
              h4.light There is not any project yet for this list.
            - else
              h4.light #{__('Find Jobs')}
              br
              .row
                - for (project in projects)
                  - project = projects[project]
                  .col-md-3.col-sm-6
                    article.job
                      h4.job-name #{project.title}
                      - if (project.image)
                        img.img-responsive(src='/#{project.image}')
                      - else
                        img.img-responsive(src='/images/job-preview-no-screen.jpg')
                      .job-wtime This order has been waiting for
                        h5(data-time='/#{project.order.placedAt}')
                      .form-group.text-center
                        if toApply
                          a.btn.btn-lg.btn-green.review(href="/printing/review/#{ project.id }") #{__('Review Order')}
                        else
                          a.btn.btn-lg.btn-green.review(href="#", disabled="disabled") #{__('Review Order')}
        br
        br

block extra-headers
  meta(name="csrf-token", content="#{csrfToken}")

block scripts
  script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js')
  script(src='/js/views/printing_requests.js')
  script
    $(document).ready(function(){
      $('.job-wtime h5').each(function(element){
        var now = moment(), // get the current moment
        // May 28, 2013 @ 12:00AM
        then = moment($(this).data('time')),
        // get the difference from now to then in ms
        ms = then.diff(now, 'milliseconds', true);

        // update the duration in ms
        ms = then.diff(now, 'milliseconds', true);
        // get the duration as months and round down
        var months = Math.floor(moment.duration(ms).asMonths());

        // subtract months from the original moment (not sure why I had to offset by 1 day)
        then = then.subtract('months', months).subtract('days', 1);
        // update the duration in ms
        ms = then.diff(now, 'milliseconds', true);
        var days = Math.floor(moment.duration(ms).asDays());

        then = then.subtract('days', days);
        // update the duration in ms
        ms = then.diff(now, 'milliseconds', true);
        var hours = Math.floor(moment.duration(ms).asHours());

        then = then.subtract('hours', hours);
        // update the duration in ms
        ms = then.diff(now, 'milliseconds', true);
        var minutes = Math.floor(moment.duration(ms).asMinutes());

        // concatonate the variables
        var diff = "" + (23 - hours) + "h " +  (60 - minutes) + "m";

        $(this).html(diff);
      });
    });

